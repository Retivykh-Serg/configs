version: "3"

networks:
  grafana:

volumes:
  prometheus_data:
  grafana_data:
  loki_data:

services:
  loki:
    image: grafana/loki:2.0.0
    restart: unless-stopped
    container_name: loki
    ports:
      - "3100:3100"
    command: -verify-config -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki_data:/loki
      - ./loki:/etc/loki
    networks:
      - grafana

  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    container_name: grafana
    environment:
      - GF_SERVER_DOMAIN=
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s:/grafana/
      - GF_SERVE_FROM_SUB_PATH=true
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    ports:
      - "3000:3000"
    networks:
      - grafana

  prometheus:
    image: prom/prometheus:v2.19.2
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    expose:
      - 9090
    networks:
      - grafana

  nodeexporter:
    image: prom/node-exporter:v1.0.1
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    networks:
      - grafana

  cadvisor:
    image: gcr.io/google-containers/cadvisor:v0.36.0
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    restart: unless-stopped
    expose:
      - 8080
    networks:
      - grafana

  nginx:
    image: nginx:1.19
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    networks:
      - grafana
    volumes:
      - /home/ubuntu/nginx-conf:/etc/nginx/conf.d:ro
      - /home/ubuntu/nginx-acme:/usr/share/nginx/certbot
      - /home/ubuntu/nginx-certs:/etc/nginx/certs:ro
